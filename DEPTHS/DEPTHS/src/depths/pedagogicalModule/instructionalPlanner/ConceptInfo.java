/* Generated by Together */

package depths.pedagogicalModule.instructionalPlanner;

import java.util.Vector;

public class ConceptInfo {
  public ConceptInfo(ConceptSelector cs){
    cSelector=cs;
  }
  /**menja atribute koncepta ; poziva se tokom parsiranja
   *
   */

  public void setConceptInfo(String elemName,String value) {
    if (elemName == "title") {
      setTitle(value);
    }
    else if (elemName == "type") {
      setType(value);
    }
    else if (elemName == "prerequisite") {
      setPrerequisite(value);
    }
    else if (elemName == "ID") {
       setID(value);
    }
    else if (elemName == "minKnowledgeLevel") {
         if (value=="0"){
         } else if (value==null){
      }
      int v=Integer.parseInt(value);
       setMinKnowledgeLevel(v);
    }
    else if (elemName == "ordinalNumber") {
           int v=Integer.parseInt(value);
      setOrdinalNumber(v);
    }
  }
    public void setConceptInfo(String elemName,int value) {
      if (elemName=="minKnowledgeLevel"){
         setMinKnowledgeLevel(value);
    }else if (elemName=="ordinalNumber"){
          setOrdinalNumber(value);
    }
  }
  public void setPrerequisite(String x) {
    prerequisite.addElement(x);
  }
  public String getPrerequisite(int rb){
    String val=new String();
     val=(String) prerequisite.elementAt(rb);
     return val;
  }
  public void setID(String x) {
   ID=x;
     }
  public String getID(){
      return ID;

  }
  public void setType(String x){
    type=x;
  }
  public String getType(){
    return type;
  }
  public void setTitle(String s){
    title=s;
  }
  public String getTitle(){
    return title;
  }
  public void setMinKnowledgeLevel(int x) {
    minKnowledgeLevel=x;
  }
  public int getMinKnowledgeLevel(){
    return minKnowledgeLevel;
  }
  public void setOrdinalNumber(int x) {

    ordinalNumber=x;
  }
  public int getOrdinalNumber(){

    return ordinalNumber;
  }
  public void clearVector()
  {
    prerequisite.removeAllElements();
  }
  public void setVectorCap(){
    cSelector.setVectCapacity(prerequisite.size());
  }

  private String title;
  private Vector prerequisite=new Vector();
  private String ID;
  private String type=new String();
  private int minKnowledgeLevel;
  private int ordinalNumber;
  private ConceptSelector cSelector;
}
